module common_constants

const MAX_PRICE_AGE: Duration = Duration::HOUR*12

const MIN_ASSET_COUNTER_COLLATERAL: Int = 100_000_000

const PARAMETER_POLICY: MintingPolicyHash = MintingPolicyHash::new(#f643c8c300085984c09d5a2d7f5b45fd2d5921cbd1512c972981402b)

const PBG_COUNTER_POLICY: MintingPolicyHash = PARAMETER_POLICY
const PBG_COUNTER_ASSETCLASS: AssetClass = AssetClass::new(PBG_COUNTER_POLICY, (1).show().encode_utf8())
const PBG_COUNTER_TOKEN: Value      = Value::new(PBG_COUNTER_ASSETCLASS, 1)

const MANAGEMENT_FEE_CYCLE_POLICY: MintingPolicyHash = PARAMETER_POLICY
const MANAGEMENT_FEE_CYCLE_ASSETCLASS: AssetClass = AssetClass::new(MANAGEMENT_FEE_CYCLE_POLICY, (2).show().encode_utf8())
const MANAGEMENT_FEE_CYCLE_TOKEN: Value      = Value::new(MANAGEMENT_FEE_CYCLE_ASSETCLASS, 1)

const TOTAL_VALUE_COUNT_POLICY: MintingPolicyHash = PARAMETER_POLICY
const TOTAL_VALUE_COUNT_ASSETCLASS: AssetClass = AssetClass::new(TOTAL_VALUE_COUNT_POLICY, (3).show().encode_utf8())
const TOTAL_VALUE_COUNT_TOKEN: Value = Value::new(TOTAL_VALUE_COUNT_ASSETCLASS, 1)

const VOTE_VALIDATOR_HASH: ValidatorHash = ValidatorHash::new(#)
const VOTE_VALIDATOR_ADDRESS: Address = Address::new(Credential::new_validator(VOTE_VALIDATOR_HASH), Option[StakingCredential]::None)
const VOTE_DELAY: Duration = Duration::MINUTE
const VOTE_DURATION: Duration = Duration::WEEK*10
const VOTE_INTENT_POLICY: MintingPolicyHash = MintingPolicyHash::new(#)
const VOTE_INTENT_ASSETCLASS: AssetClass = AssetClass::new(VOTE_INTENT_POLICY, #)