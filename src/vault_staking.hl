staking vault_staking

import { Keys } from "./common/Keys"
import { Vault } from "./common/Vault"

func main(_, ctx: ScriptContext) -> Bool {
    tx: Tx = ctx.tx;
    ref_inputs:  []TxInput = tx.ref_inputs;
    keys = Keys::from_inputs(ref_inputs);

    keys.is_signed_by_master_key(tx).trace("signed by master: ")
    && ctx.get_staking_purpose().switch{
        Rewarding => {
            vault = Vault::from_inputs(ref_inputs);
            diff: Value = vault.calc_diff(tx);
            diff.get_lovelace() >= tx.withdrawals.fold((sum: Int, _, value: Int) -> {
                sum + value
            }, 0)
        },
        Certifying => {
            true
        }
    }
}